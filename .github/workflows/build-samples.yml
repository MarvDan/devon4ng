on:

  push:
    paths-ignore:
      - 'documentation/**'
    branches: [develop]

name: Build

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      AngularBasicPWA: ${{ steps.filter.outputs.AngularBasicPWA }}
      AngularClarityLayout: ${{ steps.filter.outputs.AngularClarityLayout }}
      AngularElements: ${{ steps.filter.outputs.AngularElements }}
      AngularElementsTest: ${{ steps.filter.outputs.AngularElementsTest }}
      AngularLazyLoading: ${{ steps.filter.outputs.AngularLazyLoading }}
      AngularMaterialBasicLayout: ${{ steps.filter.outputs.AngularMaterialBasicLayout }}
      AngularMaterialTheming: ${{ steps.filter.outputs.AngularMaterialTheming }}
      AngularMockService: ${{ steps.filter.outputs.AngularMockService }}
      AngularPrimeNGLayout: ${{ steps.filter.outputs.AngularPrimeNGLayout }}
      AngularZorroLayout: ${{ steps.filter.outputs.AngularZorroLayout }}
      AppInitializer: ${{ steps.filter.outputs.AppInitializer }}
      BlobStreaming: ${{ steps.filter.outputs.BlobStreaming }}
      CypressTest: ${{ steps.filter.outputs.CypressTest }}
      ElectronTest: ${{ steps.filter.outputs.ElectronTest }}
      ErrorHandler: ${{ steps.filter.outputs.ErrorHandler }}
      IonicBasicPWA: ${{ steps.filter.outputs.IonicBasicPWA }}
      MyLibrary: ${{ steps.filter.outputs.MyLibrary }}
      MyLibraryTest: ${{ steps.filter.outputs.MyLibraryTest }}
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          AngularBasicPWA:
            - 'samples/AngularBasicPWA/**'
          AngularClarityLayout:
            - 'samples/AngularClarityLayout/**'
          AngularElements:
            - 'samples/AngularElements/**'
          AngularElementsTest:
            - 'samples/AngularElementsTest/**'
          AngularLazyLoading:
            - 'samples/AngularLazyLoading/**'
          AngularMaterialBasicLayout:
            - 'samples/AngularMaterialBasicLayout/**'
          AngularMaterialTheming:
            - 'samples/AngularMaterialTheming/**'
          AngularMockService:
            - 'samples/AngularMockService/**'
          AngularPrimeNGLayout:
            - 'samples/AngularPrimeNGLayout/**'
          AngularZorroLayout:
            - 'samples/AngularZorroLayout/**'
          AppInitializer:
            - 'samples/AppInitializer/**'
          BlobStreaming:
            - 'samples/BlobStreaming/**'
          CypressTest:
            - 'samples/CypressTest/**'
          ElectronTest:
            - 'samples/ElectronTest/**'
          ErrorHandler:
            - 'samples/ErrorHandler/**'
          IonicBasicPWA:
            - 'samples/IonicBasicPWA/**'
          MyLibrary:
            - 'samples/MyLibrary/**'
          MyLibraryTest:
            - 'samples/MyLibraryTest/**'

  # JOB to build AngularBasicPWA code
  AngularBasicPWA:
    needs: changes
    if: ${{ needs.changes.outputs.AngularBasicPWA == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          cd samples/AngularBasicPWA
          yarn install
          yarn run build

  # JOB to build AngularClarityLayout code
  AngularClarityLayout:
    needs: changes
    if: ${{ needs.changes.outputs.AngularClarityLayout == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          cd samples/AngularClarityLayout
          yarn install
          yarn run build

  # JOB to build AngularElements code
  AngularElements:
    needs: changes
    if: ${{ needs.changes.outputs.AngularElements == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          cd samples/AngularElements
          yarn install
          yarn run build

  # JOB to build AngularElementsTest code
  AngularElementsTest:
    needs: changes
    if: ${{ needs.changes.outputs.AngularElementsTest == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          cd samples/AngularElementsTest
          yarn install
          yarn run build

  # JOB to build AngularLazyLoading code
  AngularLazyLoading:
    needs: changes
    if: ${{ needs.changes.outputs.AngularLazyLoading == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          cd samples/AngularLazyLoading
          yarn install
          yarn run build

  # JOB to build AngularMaterialBasicLayout code
  AngularMaterialBasicLayout:
    needs: changes
    if: ${{ needs.changes.outputs.AngularMaterialBasicLayout == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          cd samples/AngularMaterialBasicLayout
          yarn install
          yarn run build

  # JOB to build AngularMaterialTheming code
  AngularMaterialTheming:
    needs: changes
    if: ${{ needs.changes.outputs.AngularMaterialTheming == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          cd samples/AngularMaterialTheming
          yarn install
          yarn run build

  # JOB to build AngularMockService code
  AngularMockService:
    needs: changes
    if: ${{ needs.changes.outputs.AngularMockService == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          cd samples/AngularMockService
          yarn install
          yarn run build

  # JOB to build AngularPrimeNGLayout code
  AngularPrimeNGLayout:
    needs: changes
    if: ${{ needs.changes.outputs.AngularPrimeNGLayout == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          cd samples/AngularPrimeNGLayout
          yarn install
          yarn run build

  # JOB to build AngularZorroLayout code
  AngularZorroLayout:
    needs: changes
    if: ${{ needs.changes.outputs.AngularZorroLayout == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          cd samples/AngularZorroLayout
          yarn install
          yarn run build

  # JOB to build AppInitializer code
  AppInitializer:
    needs: changes
    if: ${{ needs.changes.outputs.AppInitializer == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          cd samples/AppInitializer
          yarn install
          yarn run build

  # JOB to build BlobStreaming code
  BlobStreaming:
    needs: changes
    if: ${{ needs.changes.outputs.BlobStreaming == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          cd samples/BlobStreaming
          yarn install
          yarn run build

  # JOB to build CypressTest code
  CypressTest:
    needs: changes
    if: ${{ needs.changes.outputs.CypressTest == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          cd samples/CypressTest
          yarn install
          yarn run build

  # JOB to build ElectronTest code
  ElectronTest:
    needs: changes
    if: ${{ needs.changes.outputs.ElectronTest == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          cd samples/ElectronTest
          yarn install
          yarn run build

  # JOB to build ErrorHandler code
  ErrorHandler:
    needs: changes
    if: ${{ needs.changes.outputs.ErrorHandler == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          cd samples/ErrorHandler
          yarn install
          yarn run build

  # JOB to build IonicBasicPWA code
  IonicBasicPWA:
    needs: changes
    if: ${{ needs.changes.outputs.IonicBasicPWA == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies with YARN
        run: |
          cd samples/IonicBasicPWA
          yarn install
      - name: Setup ionic
        uses: coturiv/setup-ionic@v1.0.4
      - name: Build the app
        run: |
          cd samples/IonicBasicPWA
          yarn run build

  # JOB to build MyLibrary code
  MyLibrary:
    needs: changes
    if: ${{ needs.changes.outputs.MyLibrary == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          cd samples/MyLibrary
          yarn install
          yarn run build

  # JOB to build MyLibraryTest code
  MyLibraryTest:
    needs: changes
    if: ${{ needs.changes.outputs.MyLibraryTest == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          cd samples/MyLibraryTest
          yarn install
          yarn run build
